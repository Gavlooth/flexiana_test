{"version":3,"sources":["flexiana/core.cljs"],"mappings":"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","names":["flexiana.core/config","cljs.core.println","G__53467","props__44237__auto__","maybe-ref__44238__auto__","vec__53470","helix.core/extract-cljs-props","goog/DEBUG","G__53596","flexiana.core/Flexiana-component","vec__53474","map__53477","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","G__53478","G__53479","obj53487","clojure.string.join","cljs.core.remove","cljs.core/nil?","G__53480","G__53488","G__53489","G__53490","thump.react/create-element","G__53481","G__53493","G__53494","obj53497","G__53495","G__53498","G__53499","G__53500","G__53482","G__53503","G__53504","obj53510","p1__53445#","G__53505","G__53511","G__53512","obj53515","G__53513","G__53506","G__53520","G__53521","obj53523","p1__53446#","G__53507","G__53527","G__53528","obj53531","G__53529","G__53508","G__53536","G__53537","obj53539","p1__53447#","G__53483","G__53543","G__53544","obj53546","string-1","string-2","is-scrambled","state","set-state","helix.hooks/use-state","G__53524","G__53525","G__53526","cljs.core/assoc","G__53540","G__53541","G__53542","map__53548","map__53549","host","port","uri","x__53068__auto__","js/goog.DEBUG","js/console","sb__4795__auto__","goog.string/StringBuffer","*print-newline*-orig-val__53561","cljs.core/*print-newline*","*print-fn*-orig-val__53562","cljs.core/*print-fn*","*print-newline*-temp-val__53563","*print-fn*-temp-val__53564","x__4796__auto__","cljs.pprint.pprint","cljs.pprint.cl_format","_","clojure.string/blank?","cljs.core.async.take_BANG_","utils/js-fetch","utils.format_request","cljs.core.dissoc","x","G__53570","G__53571","G__53572","*print-newline*-orig-val__53585","*print-fn*-orig-val__53586","*print-newline*-temp-val__53587","*print-fn*-temp-val__53588","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","flexiana.core/app","seq53600","self__4852__auto__","cljs.core/seq","js/module$node_modules$react_dom$index.render","utils/query-selector","helix.core/get-react"],"sourcesContent":["(ns flexiana.core\n  (:require-macros [macros :as m])\n  (:require\n    [thump.core]\n    [thump.react :refer [hiccup-element]]\n    [helix.hooks :as hooks]\n    [helix.core :refer [<>  defnc $ provider]]\n    [helix.dom :as d]\n    [\"react\" :as react]\n    [\"react-dom\" :as rdom]\n    [goog.dom.dataset :as gdataset]\n    [clojure.string :as str]\n    [clojure.core.async :as async]\n    [cljs.pprint :refer [cl-format]]\n    [utils :as u]\n    #_[clojure.core.async :as async]))\n\n\n(def config (m/read-config))\n\n(println config)\n\n\n(defnc Flexiana-component []\n  (let [[{:keys [string-1 string-2  is-scrambled]:as state} set-state] (hooks/use-state {:string-1 \"\"  :string-2 \"\" :is-scrambled \"\"})]\n    #h/e [:div {:class \"central-container\"}\n          [:div \"is scrambled?\"]\n          [:div {:class \"display-container\"} [:span is-scrambled]]\n          [:form {:on-submit #(.preventDefault %)\n                  :class \"pure-form search-form\"}\n\n            [:label {:for \"string-1\"} \"input first string\"]\n            [:input {:name \"string-1\" :type \"text\", :class \"pure-input-rounded\"\n                     :on-change #(set-state assoc :string-1 (.. % -target -value))}]\n\n            [:label {:for \"string-2\"} \"input second string\"]\n            [:input {:name \"string-2\" :type \"text\", :class \"pure-input-rounded\"\n                     :on-change #(set-state assoc :string-2 (.. % -target -value))}]]\n          [:input {:class \"button-f pure-button submit-button\"\n                   :type \"button\"\n                   :value \"Send strings\"\n                   :on-click\n                   (let [{{:keys [host port]} :remote-host } config\n                         uri (m/spy (cl-format nil \"http://~a:~a/flexiana\" host port))]\n                    (fn [_]\n                      (when-not (or (str/blank? string-2) (str/blank? string-1))\n                       (async/take! (u/js-fetch uri (u/format-request (dissoc  state :is-scrambled) :content-type \"application/json\"))\n                                    (fn [x]  (set-state assoc :is-scrambled (m/spy (:body x))))))))}]]))\n\n\n\n\n(defn ^:export app [& _] nil\n   (rdom/render  ($ Flexiana-component) (u/query-selector  \"div#flexiana-webapp\")))\n"]}