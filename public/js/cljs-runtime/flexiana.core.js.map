{"version":3,"sources":["flexiana/core.cljs"],"mappings":"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","names":["flexiana.core/config","cljs.core.println","G__50961","props__44199__auto__","maybe-ref__44200__auto__","vec__50962","helix.core/extract-cljs-props","goog/DEBUG","G__51015","flexiana.core/Flexiana-component","vec__50965","cljs.core.nth","G__50968","G__50969","obj50973","clojure.string.join","cljs.core.remove","cljs.core/nil?","G__50970","G__50974","G__50975","obj50981","p1__50957#","G__50976","G__50982","G__50983","obj50986","G__50984","thump.react/create-element","G__50977","G__50987","G__50988","obj50990","G__50978","G__50991","G__50992","obj50995","G__50993","G__50979","G__50996","G__50997","obj50999","G__50971","G__51000","G__51001","obj51003","state","set-state","helix.hooks/use-state","map__51004","cljs.core/--destructure-map","map__51005","cljs.core.get","host","port","_","cljs.core.async.take_BANG_","utils/fetch","x__45112__auto__","js/goog.DEBUG","js/console","sb__4795__auto__","goog.string/StringBuffer","*print-newline*-orig-val__51010","cljs.core/*print-newline*","*print-fn*-orig-val__51011","cljs.core/*print-fn*","*print-newline*-temp-val__51012","*print-fn*-temp-val__51013","x__4796__auto__","cljs.pprint.pprint","cljs.pprint.cl_format","x","G__51014","cljs.core.assoc","cljs.core.js__GT_clj","js/JSON","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","flexiana.core/app","seq51016","self__4852__auto__","cljs.core/seq","js/module$node_modules$react_dom$index.render","helix.core/get-react","utils/query-selector"],"sourcesContent":["(ns flexiana.core\n  (:require-macros [macros :as m])\n  (:require\n    [thump.core]\n    [thump.react :refer [hiccup-element]]\n    [helix.hooks :as hooks]\n    [helix.core :refer [<>  defnc $ provider]]\n    [helix.dom :as d]\n    [\"react\" :as react]\n    [\"react-dom\" :as rdom]\n    [goog.dom.dataset :as gdataset]\n    [clojure.string :as str]\n    [clojure.core.async :as async]\n    [cljs.pprint :refer [cl-format]]\n    [utils :as u]\n    #_[clojure.core.async :as async]))\n\n\n(def config (m/read-config))\n\n(println config)\n\n\n(defnc Flexiana-component []\n  (let [[state set-state] (hooks/use-state {:search-results [] :search-term \"\"})]\n    #h/e [:div {:class \"central-container\"}\n          [:form {:on-submit #(.preventDefault %)\n                  :class \"pure-form search-form\"}\n\n            [:label {:for \"string-1\"} \"input first string\"]\n            [:input {:name \"string-1\" :type \"text\", :class \"pure-input-rounded\"}\n                    #_#_ :on-change #(set-state assoc :string-1 (.. % -target -value))]\n\n            [:label {:for \"string-2\"} \"input second string\"]\n            [:input {:name \"string-2\" :type \"text\", :class \"pure-input-rounded\"}\n                    #_#_ :on-change #(set-state assoc :string-2 (.. % -target -value))]]\n          [:input {:class \"button-f pure-button submit-button\"\n                   :type \"button\"\n                   :value \"Send strings\"\n                   :on-click\n                   (let [{{:keys [host port]} :remote-host } config]\n                    (fn [_]\n                      (when state\n                       (async/take! (u/fetch (m/spy (cl-format nil \"~a:~a\" host port))\n                                             {:method \"get\"})\n                                    (fn [x]  (set-state (assoc x :search-results  (:results (js->clj (.parse js/JSON (:body x)) :keywordize-keys true)))))))))}]]))\n\n\n\n\n\n\n\n\n\n(defn ^:export app [& _] nil\n   (rdom/render  ($ Flexiana-component) (u/query-selector  \"div#flexiana-webapp\")))\n"]}